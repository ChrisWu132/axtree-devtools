---
alwaysApply: true
---
<!-- NOTE: This document is maintained in **English**. -->

# AXTree Tool – Product Overview

AXTree Tool lets you inspect the Chromium Accessibility Tree (AXTree) of any running browser **without launching another browser window**. It is designed for headless / CI / Docker environments where opening DevTools is not possible.

* 🖥️  Attach to any Chromium process exposing the DevTools protocol.
* ⚡  Live tree view with incremental updates.
* 🎞️  One-click timeline recording & playback.

---
## 1. Core Use-Cases

| Scenario | Typical Environment | Value |
|----------|--------------------|-------|
| CI Pipeline | GitHub Actions running headless Chrome `--remote-debugging-port=9222` | Capture a snapshot / timeline and fail the build on regressions. |
| Docker debugging | GUI agent + Chrome inside a container | Attach from your laptop and watch AX changes live. |
| Remote server | SSH tunnel to a cloud machine | Headlessly debug SSR pages and highlight DOM nodes. |

---
## 2. Installation & First Run

```bash
# ① Start Chrome in the target environment
chrome --headless --remote-debugging-port=9222 https://your-app

# ② Attach from your workstation
npx @ax/cli connect --port 9222  # add --output run.json to persist the recording
```

Output sample
```
✔ Connected to https://your-app (CDP)
✔ Bridge listening ws://127.0.0.1:5174
✔ UI running at http://localhost:5173  (auto-opened)
```

---
## 3. CLI Commands

| Command | Purpose | Problem Solved |
|---------|---------|----------------|
| `connect` | **Live Inspector** | Real-time AX debugging when in Docker/CI/remote environments where DevTools can't be opened. |
| `connect` (auto-record) | **Timeline Debugger** | Starts recording immediately. The UI shows a ⏺ timer; click ⏹ to stop and jump into timeline playback. |

---
## 4. Feature Matrix

* **Virtualised Tree View** – powered by *react-arborist*; >100k nodes remain smooth.
* **Incremental Updates** – listens to `Accessibility.nodesUpdated`; patches the tree with minimal payload.
* **Rich Node Panel** – roles, names, states, relations at a glance.
* **Fuzzy Search** – search by role/name and auto-scroll to the node.
* **Bidirectional Highlight** – click in UI → page highlights; focus change in page → UI syncs.
* **Scriptable WebSocket API** – subscribe to tree events or trigger snapshots from automation.

---
## 5. Compatibility & Tech Stack

| Layer | Stack |
|-------|-------|
| Browser | Chromium ≥ 100 (Chrome / Edge / Brave …) |
| CDP client | `chrome-remote-interface` |
| Diff | `jsondiffpatch` |
| Front-end | React 18 + Vite |
| Node | ≥ 18 |

For implementation details and project layout, see `02_Structure.mdc` and `implementation.mdc`.
